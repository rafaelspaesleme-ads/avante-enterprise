/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rplorcamento.sistema.listagem;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rplorcamento.conexao.rplorcamentoConexao;

/**
 *
 * @author PCPROGRAMADOR
 */
public class rplorcamentoTelaListaFuncionario extends javax.swing.JFrame {

    /**
     * Creates new form rplorcamentoTelaListaCliente
     */
    public rplorcamentoTelaListaFuncionario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jText_nome_funcionarios = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jText_setor_funcionarios = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jButton_controle_de_busca_funcionarios = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jText_cargo_funcionarios = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jCbx_situacao_funcionarios = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jCbx_a_sistema_funcionarios = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jCbx_r_salario_funcionarios = new javax.swing.JComboBox();
        JCbx_cod_funcionarios = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jText_admicao_i_funcionarios = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jText_admicao_f_funcionarios = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jText_demissao_i_funcionarios = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jText_demissao_f_funcionarios = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar7 = new javax.swing.JMenuBar();
        jMenu13 = new javax.swing.JMenu();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenu14 = new javax.swing.JMenu();
        jMenuItem32 = new javax.swing.JMenuItem();
        jMenuItem33 = new javax.swing.JMenuItem();
        jMenuItem34 = new javax.swing.JMenuItem();
        jMenuItem35 = new javax.swing.JMenuItem();
        jMenuItem36 = new javax.swing.JMenuItem();
        jMenuItem37 = new javax.swing.JMenuItem();
        jMenu15 = new javax.swing.JMenu();
        jMenuItem38 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listagem de Funcionários");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(245, 245, 245));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("RELATÓRIO DE IMPRESSÃO");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Pesquise por:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Nome:");

        jText_nome_funcionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jText_nome_funcionariosKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Setor:");

        jText_setor_funcionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jText_setor_funcionariosKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Cargo:");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton_controle_de_busca_funcionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rplorcamento/imagem/buscar.png"))); // NOI18N
        jButton_controle_de_busca_funcionarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_controle_de_busca_funcionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_controle_de_busca_funcionariosActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Código:");

        jText_cargo_funcionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jText_cargo_funcionariosKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Situação:");

        jCbx_situacao_funcionarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));
        jCbx_situacao_funcionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCbx_situacao_funcionariosMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Acesso ao Sistema:");

        jCbx_a_sistema_funcionarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sim", "Não", "%" }));
        jCbx_a_sistema_funcionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCbx_a_sistema_funcionariosMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Recebe Salário:");

        jCbx_r_salario_funcionarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sim", "Não", "%" }));
        jCbx_r_salario_funcionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCbx_r_salario_funcionariosMouseClicked(evt);
            }
        });

        JCbx_cod_funcionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JCbx_cod_funcionariosKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Admição:");

        try {
            jText_admicao_i_funcionarios.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("até");

        try {
            jText_admicao_f_funcionarios.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jText_admicao_f_funcionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jText_admicao_f_funcionariosKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Demissão:");

        try {
            jText_demissao_i_funcionarios.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("até");

        try {
            jText_demissao_f_funcionarios.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jText_demissao_f_funcionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jText_demissao_f_funcionariosKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JCbx_cod_funcionarios))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jText_nome_funcionarios)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jText_setor_funcionarios)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jText_cargo_funcionarios)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCbx_situacao_funcionarios, 0, 70, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCbx_a_sistema_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCbx_r_salario_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jText_admicao_i_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jText_admicao_f_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jText_demissao_i_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jText_demissao_f_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_controle_de_busca_funcionarios, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCbx_a_sistema_funcionarios, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCbx_r_salario_funcionarios)
                                        .addComponent(jLabel9)
                                        .addComponent(jText_admicao_i_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)
                                        .addComponent(jText_admicao_f_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11)
                                        .addComponent(jText_demissao_i_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)
                                        .addComponent(jText_demissao_f_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel8)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jText_nome_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jText_setor_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jText_cargo_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCbx_situacao_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JCbx_cod_funcionarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jSeparator2)
                            .addComponent(jButton_controle_de_busca_funcionarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "CTPS", "Matricula", "Situação", "RG", "CPF", "Cargo", "Departamento", "Setor", "Endereço", "Bairro", "Cidade", "UF", "Telefone", "Celular", "Email", "Admição", "Desligamento", "Motivo", "Acesso Sistema", "Recebe Salario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu13.setText("Arquivo");

        jMenuItem31.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem31.setText("Fechar Tela");
        jMenu13.add(jMenuItem31);

        jMenuBar7.add(jMenu13);

        jMenu14.setText("Editor");

        jMenuItem32.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem32.setText("Salvar");
        jMenu14.add(jMenuItem32);

        jMenuItem33.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem33.setText("Atualizar");
        jMenu14.add(jMenuItem33);

        jMenuItem34.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem34.setText("Excluir");
        jMenu14.add(jMenuItem34);

        jMenuItem35.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem35.setText("Listar");
        jMenuItem35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem35ActionPerformed(evt);
            }
        });
        jMenu14.add(jMenuItem35);

        jMenuItem36.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem36.setText("Imprimir");
        jMenu14.add(jMenuItem36);

        jMenuItem37.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem37.setText("Atualizar Tela");
        jMenu14.add(jMenuItem37);

        jMenuBar7.add(jMenu14);

        jMenu15.setText("Ajuda");

        jMenuItem38.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem38.setText("Contato do desenvolvedor");
        jMenu15.add(jMenuItem38);

        jMenuBar7.add(jMenu15);

        setJMenuBar(jMenuBar7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem35ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem35ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        CarregarTela();

// TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jCbx_a_sistema_funcionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCbx_a_sistema_funcionariosMouseClicked

        jCbx_r_salario_funcionarios.setSelectedItem(null);
        jCbx_situacao_funcionarios.setSelectedItem(null);
        jCbx_r_salario_funcionarios.setEnabled(false);
        jCbx_situacao_funcionarios.setEnabled(false);
        jCbx_a_sistema_funcionarios.setEnabled(true);

// TODO add your handling code here:
    }//GEN-LAST:event_jCbx_a_sistema_funcionariosMouseClicked

    private void jCbx_r_salario_funcionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCbx_r_salario_funcionariosMouseClicked

        jCbx_r_salario_funcionarios.setEnabled(true);
        jCbx_situacao_funcionarios.setEnabled(false);
        jCbx_a_sistema_funcionarios.setEnabled(false);
        jCbx_situacao_funcionarios.setSelectedItem(null);
        jCbx_a_sistema_funcionarios.setSelectedItem(null);

// TODO add your handling code here:
    }//GEN-LAST:event_jCbx_r_salario_funcionariosMouseClicked

    private void jCbx_situacao_funcionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCbx_situacao_funcionariosMouseClicked

        jCbx_situacao_funcionarios.setEnabled(true);
        jCbx_r_salario_funcionarios.setEnabled(false);
        jCbx_a_sistema_funcionarios.setEnabled(false);
        jCbx_r_salario_funcionarios.setSelectedItem(null);
        jCbx_a_sistema_funcionarios.setSelectedItem(null);

// TODO add your handling code here:
    }//GEN-LAST:event_jCbx_situacao_funcionariosMouseClicked

    private void JCbx_cod_funcionariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JCbx_cod_funcionariosKeyPressed

        ExibirCodigoFuncionarios();

// TODO add your handling code here:
    }//GEN-LAST:event_JCbx_cod_funcionariosKeyPressed

    private void jText_nome_funcionariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_nome_funcionariosKeyPressed

        ExibirNomeFuncionarios();

// TODO add your handling code here:
    }//GEN-LAST:event_jText_nome_funcionariosKeyPressed

    private void jText_setor_funcionariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_setor_funcionariosKeyPressed

        ExibirSetorFuncionarios();

// TODO add your handling code here:
    }//GEN-LAST:event_jText_setor_funcionariosKeyPressed

    private void jText_cargo_funcionariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_cargo_funcionariosKeyPressed

        ExibirCargoFuncionarios();

// TODO add your handling code here:
    }//GEN-LAST:event_jText_cargo_funcionariosKeyPressed

    private void jText_admicao_f_funcionariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_admicao_f_funcionariosKeyPressed

        ExibirDataAdmicaoFuncionarios();

// TODO add your handling code here:
    }//GEN-LAST:event_jText_admicao_f_funcionariosKeyPressed

    private void jText_demissao_f_funcionariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_demissao_f_funcionariosKeyPressed

        ExibirDataDemissaoFuncionarios();

// TODO add your handling code here:
    }//GEN-LAST:event_jText_demissao_f_funcionariosKeyPressed

    private void jButton_controle_de_busca_funcionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_controle_de_busca_funcionariosActionPerformed

        if (jCbx_a_sistema_funcionarios.isEnabled() == true && jCbx_a_sistema_funcionarios.getSelectedItem() != null) {
            ExibirAcessoSistemaFuncionarios();
        } else if (jCbx_r_salario_funcionarios.isEnabled() == true && jCbx_r_salario_funcionarios.getSelectedItem() != null) {
            ExibirRecebeSalarioFuncionarios();
        } else if (jCbx_situacao_funcionarios.isEnabled() == true && jCbx_situacao_funcionarios.getSelectedItem() != null) {
            ExibirSituacaoFuncionarios();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton_controle_de_busca_funcionariosActionPerformed

    //|||||||||||||-------------------------------------CARREGA TELA DO SISTEMA!!!!!!!!!!!!!!!!!!----------------------------|||||||||||||||
    public void CarregarTela() {
        try {
            Connection conn = rplorcamentoConexao.GeraConexao();

            String sql = "SELECT * FROM bd_rplorcamento.funcionarios";

            PreparedStatement comando = conn.prepareStatement(sql);

            ResultSet rs = comando.executeQuery();

            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
            modelo.setNumRows(0);

            while (rs.next()) {

//                    String dataFormatada_ = format_.format(rs.getString("nascimento"));
                modelo.addRow(
                        new Object[]{
                            rs.getString("id"),//codigo
                            rs.getString("nome"),//nome
                            rs.getString("ctps"),//ctps
                            rs.getString("matricula"),//matricula
                            rs.getString("situacao"),//situacao
                            rs.getString("rg"),//rg
                            rs.getString("cpf"),//cpf
                            rs.getString("cargo"),//cargo
                            rs.getString("departamento"),//depto
                            rs.getString("setor"),//setor
                            rs.getString("endereco"),//endereço
                            rs.getString("bairro"),//bairro
                            rs.getString("cidade"),//cidade
                            rs.getString("uf"),//uf
                            rs.getString("telefone"),//telefone
                            rs.getString("celular"),//celular
                            rs.getString("email"),//email
                            format_.format(rs.getDate("admicao")),//admição
                            format_.format(rs.getDate("desligamento")),//demissão
                            rs.getString("motivo_desligamento"),//motivo
                            rs.getString("acesso_sistema"),//acesso
                            rs.getString("recebe_salario")//salario
                        }
                );

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problemas ao tentar conectar com o banco de dados: " + e);
        }
    }

    //|||||||||||||-------------------------------------BUSCA POR DIGITAÇÃO!!!!!!!!!!!!!!!!!!----------------------------|||||||||||||||
    public void ExibirCodigoFuncionarios() {

        String buscarNome = (String) JCbx_cod_funcionarios.getText();

        try {

            if (!buscarNome.equals("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE id = ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setString(1, buscarNome);

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario

                            }
                    );

                }

            } else {
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public void ExibirNomeFuncionarios() {

        String buscarNome = (String) jText_nome_funcionarios.getText();

        try {

            if (!buscarNome.equalsIgnoreCase("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE nome LIKE ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setString(1, "%" + buscarNome + "%");

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario
                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public void ExibirSetorFuncionarios() {

        String buscarNome = (String) jText_setor_funcionarios.getText();

        try {

            if (!buscarNome.equalsIgnoreCase("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE setor LIKE ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setString(1, "%" + buscarNome + "%");

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario
                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public void ExibirCargoFuncionarios() {

        String buscarNome = (String) jText_cargo_funcionarios.getText();

        try {

            if (!buscarNome.equalsIgnoreCase("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE cargo LIKE ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setString(1, "%" + buscarNome + "%");

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario
                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    //|||||||||||||-------------------------------------BUSCA POR DATA!!!!!!!!!!!!!!!!!!----------------------------|||||||||||||||
    public void ExibirDataAdmicaoFuncionarios() {

        String busca_data_i = (String) jText_admicao_i_funcionarios.getText();
        String busca_data_f = (String) jText_admicao_f_funcionarios.getText();

        try {

            String data_nascimento_i = busca_data_i;
            DateFormat fmt2 = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date data_inicio = new java.sql.Date(fmt2.parse(data_nascimento_i).getTime());

            String data_nascimento_f = busca_data_f;
            DateFormat fmt3 = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date data_fim = new java.sql.Date(fmt3.parse(data_nascimento_f).getTime());

            if (data_inicio != null && data_fim != null) {

                System.out.println(data_inicio + " - " + data_fim);

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE admicao BETWEEN '" + data_inicio + "' AND '" + data_fim + "'";

                PreparedStatement comando = conn.prepareStatement(sql);

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario
                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void ExibirDataDemissaoFuncionarios() {

        String busca_data_i = (String) jText_demissao_i_funcionarios.getText();
        String busca_data_f = (String) jText_demissao_f_funcionarios.getText();

        try {

            String data_nascimento_i = busca_data_i;
            DateFormat fmt2 = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date data_inicio = new java.sql.Date(fmt2.parse(data_nascimento_i).getTime());

            String data_nascimento_f = busca_data_f;
            DateFormat fmt3 = new SimpleDateFormat("dd/MM/yyyy");
            java.sql.Date data_fim = new java.sql.Date(fmt3.parse(data_nascimento_f).getTime());

            if (data_inicio != null && data_fim != null) {

                System.out.println(data_inicio + " - " + data_fim);

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE desligamento BETWEEN '" + data_inicio + "' AND '" + data_fim + "'";

                PreparedStatement comando = conn.prepareStatement(sql);

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario
                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    //|||||||||||||-------------------------------------BUSCA POR COMBOBOX!!!!!!!!!!!!!!!!!!----------------------------|||||||||||||||
    public void ExibirSituacaoFuncionarios() {

        String buscarNome = (String) jCbx_situacao_funcionarios.getSelectedItem();

        try {

            if (!buscarNome.equalsIgnoreCase("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE situacao = ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setString(1, buscarNome);

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario

                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public void ExibirAcessoSistemaFuncionarios() {

        String sim_ou_nao = (String) jCbx_a_sistema_funcionarios.getSelectedItem();

        int s_o_n = 0;

        if (null != sim_ou_nao) {
            switch (sim_ou_nao) {
                case "Sim":
                    s_o_n = 1;
                    break;
                case "Não":
                    s_o_n = 0;
                    break;
                default:
                    s_o_n = 2;
                    break;
            }
        }

        String buscarNome = String.valueOf(s_o_n);

        try {

            if (!buscarNome.equalsIgnoreCase("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE acesso_sistema = ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setInt(1, Integer.parseInt(buscarNome));

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario

                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public void ExibirRecebeSalarioFuncionarios() {

        String sim_ou_nao = (String) jCbx_r_salario_funcionarios.getSelectedItem();

        int s_o_n = 0;

        if (null != sim_ou_nao) {
            switch (sim_ou_nao) {
                case "Sim":
                    s_o_n = 1;
                    break;
                case "Não":
                    s_o_n = 0;
                    break;
                default:
                    s_o_n = 2;
                    break;
            }
        }

        String buscarNome = String.valueOf(s_o_n);
        try {

            if (!buscarNome.equalsIgnoreCase("")) {

                Connection conn = rplorcamentoConexao.GeraConexao();

                String sql = "SELECT * FROM bd_rplorcamento.funcionarios WHERE recebe_salario = ?";

                PreparedStatement comando = conn.prepareStatement(sql);

                comando.setInt(1, Integer.parseInt(buscarNome));

                ResultSet rs = comando.executeQuery();

                DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
                modelo.setNumRows(0);

                while (rs.next()) {

                    modelo.addRow(
                            new Object[]{
                                rs.getString("id"),//codigo
                                rs.getString("nome"),//nome
                                rs.getString("ctps"),//ctps
                                rs.getString("matricula"),//matricula
                                rs.getString("situacao"),//situacao
                                rs.getString("rg"),//rg
                                rs.getString("cpf"),//cpf
                                rs.getString("cargo"),//cargo
                                rs.getString("departamento"),//depto
                                rs.getString("setor"),//setor
                                rs.getString("endereco"),//endereço
                                rs.getString("bairro"),//bairro
                                rs.getString("cidade"),//cidade
                                rs.getString("uf"),//uf
                                rs.getString("telefone"),//telefone
                                rs.getString("celular"),//celular
                                rs.getString("email"),//email
                                format_.format(rs.getDate("admicao")),//admição
                                format_.format(rs.getDate("desligamento")),//demissão
                                rs.getString("motivo_desligamento"),//motivo
                                rs.getString("acesso_sistema"),//acesso
                                rs.getString("recebe_salario")//salario
                            }
                    );

                }

            } else {

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rplorcamentoTelaListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rplorcamentoTelaListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rplorcamentoTelaListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rplorcamentoTelaListaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rplorcamentoTelaListaFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JCbx_cod_funcionarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_controle_de_busca_funcionarios;
    private javax.swing.JComboBox jCbx_a_sistema_funcionarios;
    private javax.swing.JComboBox jCbx_r_salario_funcionarios;
    private javax.swing.JComboBox jCbx_situacao_funcionarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenuBar jMenuBar7;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem34;
    private javax.swing.JMenuItem jMenuItem35;
    private javax.swing.JMenuItem jMenuItem36;
    private javax.swing.JMenuItem jMenuItem37;
    private javax.swing.JMenuItem jMenuItem38;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField jText_admicao_f_funcionarios;
    private javax.swing.JFormattedTextField jText_admicao_i_funcionarios;
    private javax.swing.JTextField jText_cargo_funcionarios;
    private javax.swing.JFormattedTextField jText_demissao_f_funcionarios;
    private javax.swing.JFormattedTextField jText_demissao_i_funcionarios;
    private javax.swing.JTextField jText_nome_funcionarios;
    private javax.swing.JTextField jText_setor_funcionarios;
    // End of variables declaration//GEN-END:variables

    SimpleDateFormat format_ = new SimpleDateFormat("dd/MM/yyyy");

}
